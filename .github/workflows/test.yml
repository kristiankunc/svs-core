name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  test:
    needs: lint-format
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:28-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load environment variables from .env.ci
        uses: aarcangeli/load-dotenv@v1
        with:
          path: .github/extra
          filenames: .env.ci
          expand: true

      - name: DEBUG - Print specific environment variables
        run: |
          echo "Environment Variables:"
          for var in POSTGRES_USER POSTGRES_PASSWORD POSTGRES_DB POSTGRES_HOST PGPORT DATABASE_URL TEST_DATABASE_URL; do
            echo "$var=${!var}"
          done

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-qemu-action@v3

      - name: Build & Start Containers
        run: |
          docker compose -f .github/extra/docker-compose.yml up -d --build

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install -e .

      - name: Run unit tests
        run: python -m pytest -m unit

      - name: Run integration tests
        run: python -m pytest -m integration
