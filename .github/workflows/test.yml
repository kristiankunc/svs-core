name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  test:
    needs: lint-format
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:28-dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load environment variables from .env into GITHUB_ENV
        run: |
          export $(grep -v '^#' .github/workflows/.env.ci | xargs)
          grep -v '^#' .github/workflows/.env.ci >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-qemu-action@v3

      - name: Build & Start Containers
        run: |
          docker compose up -d --build -f .github/workflows/docker-compose.yml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install -e .

      - name: Run unit tests
        run: python -m pytest -m unit

      - name: Run integration tests
        run: python -m pytest -m integration
