name: Test

on:
    push:
        branches: [main]
    pull_request:

jobs:
    lint-format:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            - name: Cache pip dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install ".[dev]"

            - name: Run pre-commit hooks
              run: pre-commit run --all-files

    test:
        needs: lint-format
        runs-on: ubuntu-latest
        services:
            docker:
                image: docker:28-dind
                options: --privileged

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Load environment variables from .env.ci
              uses: aarcangeli/load-dotenv@v1
              with:
                  path: .github/extra
                  filenames: .env.ci
                  expand: true

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            - name: Cache pip dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Set up Docker
              uses: docker/setup-buildx-action@v3

            - name: Set up Docker Compose
              uses: docker/setup-qemu-action@v3

            - name: Build & Start Containers
              run: |
                  docker compose -f .github/extra/docker-compose.yml up -d --build

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install -e ".[dev]"

            - name: Run tests
              run: pytest --cov --cov-branch --cov-report=xml

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
