{
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "njpwerner.autodocstring",
        "tamasfe.even-better-toml",
        "ms-python.mypy-type-checker",
        "ms-ossdata.vscode-pgsql",
        "redhat.vscode-yaml"
      ],
      "settings": {
        "[json]": {
          "editor.defaultFormatter": null
        },
        "[jsonc]": {
          "editor.defaultFormatter": null
        },
        "[python]": {
          "editor.defaultFormatter": null,
          "editor.formatOnSave": false
        },
        "[yaml]": {
          "editor.defaultFormatter": "redhat.vscode-yaml"
        },
        "[yml]": {
          "editor.defaultFormatter": "redhat.vscode-yaml"
        },
        "editor.codeActionsOnSave": {
          "source.fixAll": "always",
          "source.organizeImports": "always"
        },
        "editor.formatOnSave": true,
        "mypy-type-checker.path": [
          "/home/dev/.venv/bin/mypy"
        ],
        "mypy-type-checker.preferDaemon": true,
        "mypy-type-checker.reportingScope": "workspace",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.exclude": [
          "**.py"
        ],
        "python.analysis.indexing": true,
        "python.analysis.typeCheckingMode": "off",
        "python.defaultInterpreterPath": "/home/dev/.venv/bin/python",
        "python.formatting.provider": "none",
        "python.linting.enabled": true,
        "python.linting.mypyArgs": [
          "--config-file",
          "mypy.ini"
        ],
        "python.linting.mypyEnabled": true,
        "python.linting.ruffEnabled": true,
        "python.testing.pytestArgs": [
          "tests"
        ],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false
      }
    }
  },
  "dockerComposeFile": [
    "docker-compose.yml"
  ],
  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
  },
  "name": "Library DevContainer",
  "postAttachCommand": "pip install -r requirements.txt && pre-commit install",
  "remoteUser": "dev",
  "service": "devcontainer",
  "shutdownAction": "stopCompose",
  "workspaceFolder": "/home/dev/app"
}
